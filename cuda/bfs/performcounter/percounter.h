#ifndef PERCOUNTER_H
#define FERCOUNTER_H
int init();
int shutdown();
void print(char *content);
int getDevicehandle(nvmlDevice_t *device);
int getCurrPcieLinkWidth(nvmlDevice_t device, unsigned int *currLinkWidth);
int getPcieThroughput(nvmlDevice_t device, unsigned int *value);
int getPcieReplayCounter(nvmlDevice_t device, unsigned int *value);
int handleRenturnValue(nvmlReturn_t returnV);
int getFanSpeed(nvmlDevice_t device, unsigned int *speed);
int getPowerUsage(nvmlDevice_t device, unsigned int *power);
int getTotalEnergyConsumption(nvmlDevice_t device, unsigned long long *energy);
int getMemoryInfo(nvmlDevice_t device, nvmlMemory_t *memory);
int getTotalSingleBitEccErrors(nvmlDevice_t device, unsigned long long *eccCounts);
int getTotalDoubleBitEccErrors(nvmlDevice_t device, unsigned long long *eccCounts);
int getMemorySingleBitErrorCounterL1Cache(nvmlDevice_t device, unsigned long long *count);
int getMemoryDoubleBitErrorCounterL1Cache(nvmlDevice_t device, unsigned long long *count);
int getMemorySingleBitErrorCounterL2Cache(nvmlDevice_t device, unsigned long long *count);
int getMemoryDoubleBitErrorCounterL2Cache(nvmlDevice_t device, unsigned long long *count);
int getMemorySingleBitErrorCounterDeviceMemory(nvmlDevice_t device, unsigned long long *count);
int getMemoryDoubleBitErrorCounterDeviceMemory(nvmlDevice_t device, unsigned long long *count);
int getMemorySingleBitErrorCounterRegisterFile(nvmlDevice_t device, unsigned long long *count);
int getMemoryDoubleBitErrorCounterRegisterFile(nvmlDevice_t device, unsigned long long *count);
int getMemorySingleBitErrorCounterTextureMemory(nvmlDevice_t device, unsigned long long *count);
int getMemoryDoubleBitErrorCounterTextureMemory(nvmlDevice_t device, unsigned long long *count);
int getMemorySingleBitErrorCounterTextureShm(nvmlDevice_t device, unsigned long long *count);
int getMemoryDoubleBitErrorCounterTextureShm(nvmlDevice_t device, unsigned long long *count);
int getMemorySingleBitErrorCounterCBU(nvmlDevice_t device, unsigned long long *count);
int getMemoryDoubleBitErrorCounterCBU(nvmlDevice_t device, unsigned long long *count);
int getUtilizationRates(nvmlDevice_t device, nvmlUtilization_t *utilization);
int getEncoderUtilization(nvmlDevice_t device, unsigned int *utilization, unsigned int *samplingPeriodUs);
//int GetEncoderCapacity(nvmlDevice_t device, unsigned int *encoderCapacity);
//int getEncoderStats(nvmlDevice_t device, unsigned int *sessionCount, unsigned int *averageFps, unsigned int *averageLatency);
int getDecoderUtilization(nvmlDevice_t device, unsigned int *utilization, unsigned int *samplingPeriodUs);
//int getFBCStats(nvmlDevice_t device, nvmlFBCStats_t *fbcStats);
int getComputeRunningProcesses(nvmlDevice_t device, nvmlProcessInfo_t *infos);
//int getSamples(nvmlDevice_t device, nvmlSamplingType_t type, unsigned long long lastSeenTimeStamp, nvmlValueType_t *sampleValType, unsigned int *sampleCount, nvmlSample_t *samples);
int getBAR1MemoryInfo(nvmlDevice_t device, nvmlBAR1Memory_t *bar1Memory);
int getViolationStatus(nvmlDevice_t device, nvmlPerfPolicyType_t perfPolicyType, nvmlViolationTime_t *violTime);
//int getRetiredPagesSingleBitError(nvmlDevice_t device, unsigned int *pageCount, unsigned long long *addresses);
//int getRetiredPagesDoubleBitError(nvmlDevice_t device, unsigned int *pageCount, unsigned long long *addresses);
//int getNvLinkState();
//int getNvLinkErrorCounterReplay(nvmlDevice_t device, unsigned int link, unsigned long long *counterValue);
//int getNvLinkErrorCounterRecovery(nvmlDevice_t device, unsigned int link, unsigned long long *counterValue);
//int getNvLinkErrorCounterCRCFlit(nvmlDevice_t device, unsigned int link, unsigned long long *counterValue);
//int getNvLinkErrorCounterCRCData(nvmlDevice_t device, unsigned int link, unsigned long long *counterValue);
//int getNvLinkUtilizationCounter(nvmlDevice_t device, unsigned int link, unsigned int counter, unsigned long long *rxcounter, unsigned long long *txcounter);
//int getSupportedVgpus(nvmlDevice_t device, unsigned int *vgpuCount, nvmlVgpuTypeId_t *vgpuTypeIds);
//int getActiveVgpus(nvmlDevice_t device, unsigned int *vgpuCount, nvmlVgpuInstance_t *vgpuInstances);
//int vgpuInstanceGetEncoderCapacity(nvmlVgpuInstance_t vgpuInstance, unsigned int *encoderCapacity);
//int getVgpuUtilization(nvmlDevice_t device, unsigned long long lastSeenTimeStamp, nvmlValueType_t *sampleValType, unsigned int *vgpuInstanceSamplesCount, nvmlVgpuInstanceUtilizationSample_t *utilizationSamples);
//int getVgpuProcessUtilization(nvmlDevice_t device, unsigned long long lastSeenTimeStamp, unsigned int *vgpuProcessSamplesCount, nvmlVgpuProcessUtilizationSample_t *utilizationSamples);
//int vgpuInstanceGetEncoderStats(nvmlVgpuInstance_t vgpuInstance, unsigned int *sessionCount, unsigned int *averageFps, unsigned int *averageLatency);
//int vgpuInstanceGetFBCStats(nvmlVgpuInstance_t vgpuInstance, nvmlFBCStats_t *fbcStats);
//int getProcessUtilization(nvmlDevice_t device, nvmlProcessUtilizationSample_t *utilization, unsigned int *processSamplesCount, unsigned long long lastSeenTimeStamp);

#endif
